// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ssl_game_event.proto

#include "ssl_game_event.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_ssl_5fgame_5fevent_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ssl_5fgame_5fevent_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Game_Event_Originator;
}  // namespace protobuf_ssl_5fgame_5fevent_2eproto
class Game_Event_OriginatorDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Game_Event_Originator>
      _instance;
} _Game_Event_Originator_default_instance_;
class Game_EventDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Game_Event>
      _instance;
} _Game_Event_default_instance_;
namespace protobuf_ssl_5fgame_5fevent_2eproto {
static void InitDefaultsGame_Event_Originator() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Game_Event_Originator_default_instance_;
    new (ptr) ::Game_Event_Originator();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Game_Event_Originator::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Game_Event_Originator =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGame_Event_Originator}, {}};

static void InitDefaultsGame_Event() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Game_Event_default_instance_;
    new (ptr) ::Game_Event();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Game_Event::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Game_Event =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsGame_Event}, {
      &protobuf_ssl_5fgame_5fevent_2eproto::scc_info_Game_Event_Originator.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Game_Event_Originator.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Game_Event.base);
}

::google::protobuf::Metadata file_level_metadata[2];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Game_Event_Originator, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Game_Event_Originator, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Game_Event_Originator, team_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Game_Event_Originator, botid_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Game_Event, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Game_Event, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Game_Event, gameeventtype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Game_Event, originator_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Game_Event, message_),
  2,
  1,
  0,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::Game_Event_Originator)},
  { 9, 17, sizeof(::Game_Event)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Game_Event_Originator_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Game_Event_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "ssl_game_event.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\024ssl_game_event.proto\"\356\005\n\nGame_Event\0220\n"
      "\rgameEventType\030\001 \002(\0162\031.Game_Event.GameEv"
      "entType\022*\n\noriginator\030\002 \001(\0132\026.Game_Event"
      ".Originator\022\017\n\007message\030\003 \001(\t\032;\n\nOriginat"
      "or\022\036\n\004team\030\001 \002(\0162\020.Game_Event.Team\022\r\n\005bo"
      "tId\030\002 \001(\r\"\371\003\n\rGameEventType\022\013\n\007UNKNOWN\020\000"
      "\022\n\n\006CUSTOM\020\001\022\025\n\021NUMBER_OF_PLAYERS\020\002\022\023\n\017B"
      "ALL_LEFT_FIELD\020\003\022\010\n\004GOAL\020\004\022\020\n\014KICK_TIMEO"
      "UT\020\005\022\027\n\023NO_PROGRESS_IN_GAME\020\006\022\021\n\rBOT_COL"
      "LISION\020\007\022\025\n\021MULTIPLE_DEFENDER\020\010\022\037\n\033MULTI"
      "PLE_DEFENDER_PARTIALLY\020\t\022\034\n\030ATTACKER_IN_"
      "DEFENSE_AREA\020\n\022\t\n\005ICING\020\013\022\016\n\nBALL_SPEED\020"
      "\014\022\024\n\020ROBOT_STOP_SPEED\020\r\022\022\n\016BALL_DRIBBLIN"
      "G\020\016\022\031\n\025ATTACKER_TOUCH_KEEPER\020\017\022\020\n\014DOUBLE"
      "_TOUCH\020\020\022\034\n\030ATTACKER_TO_DEFENCE_AREA\020\021\022#"
      "\n\037DEFENDER_TO_KICK_POINT_DISTANCE\020\022\022\020\n\014B"
      "ALL_HOLDING\020\023\022\021\n\rINDIRECT_GOAL\020\024\022\031\n\025BALL"
      "_PLACEMENT_FAILED\020\025\022\020\n\014CHIP_ON_GOAL\020\026\"8\n"
      "\004Team\022\020\n\014TEAM_UNKNOWN\020\000\022\017\n\013TEAM_YELLOW\020\001"
      "\022\r\n\tTEAM_BLUE\020\002"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 775);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ssl_game_event.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_ssl_5fgame_5fevent_2eproto
const ::google::protobuf::EnumDescriptor* Game_Event_GameEventType_descriptor() {
  protobuf_ssl_5fgame_5fevent_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ssl_5fgame_5fevent_2eproto::file_level_enum_descriptors[0];
}
bool Game_Event_GameEventType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Game_Event_GameEventType Game_Event::UNKNOWN;
const Game_Event_GameEventType Game_Event::CUSTOM;
const Game_Event_GameEventType Game_Event::NUMBER_OF_PLAYERS;
const Game_Event_GameEventType Game_Event::BALL_LEFT_FIELD;
const Game_Event_GameEventType Game_Event::GOAL;
const Game_Event_GameEventType Game_Event::KICK_TIMEOUT;
const Game_Event_GameEventType Game_Event::NO_PROGRESS_IN_GAME;
const Game_Event_GameEventType Game_Event::BOT_COLLISION;
const Game_Event_GameEventType Game_Event::MULTIPLE_DEFENDER;
const Game_Event_GameEventType Game_Event::MULTIPLE_DEFENDER_PARTIALLY;
const Game_Event_GameEventType Game_Event::ATTACKER_IN_DEFENSE_AREA;
const Game_Event_GameEventType Game_Event::ICING;
const Game_Event_GameEventType Game_Event::BALL_SPEED;
const Game_Event_GameEventType Game_Event::ROBOT_STOP_SPEED;
const Game_Event_GameEventType Game_Event::BALL_DRIBBLING;
const Game_Event_GameEventType Game_Event::ATTACKER_TOUCH_KEEPER;
const Game_Event_GameEventType Game_Event::DOUBLE_TOUCH;
const Game_Event_GameEventType Game_Event::ATTACKER_TO_DEFENCE_AREA;
const Game_Event_GameEventType Game_Event::DEFENDER_TO_KICK_POINT_DISTANCE;
const Game_Event_GameEventType Game_Event::BALL_HOLDING;
const Game_Event_GameEventType Game_Event::INDIRECT_GOAL;
const Game_Event_GameEventType Game_Event::BALL_PLACEMENT_FAILED;
const Game_Event_GameEventType Game_Event::CHIP_ON_GOAL;
const Game_Event_GameEventType Game_Event::GameEventType_MIN;
const Game_Event_GameEventType Game_Event::GameEventType_MAX;
const int Game_Event::GameEventType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Game_Event_Team_descriptor() {
  protobuf_ssl_5fgame_5fevent_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ssl_5fgame_5fevent_2eproto::file_level_enum_descriptors[1];
}
bool Game_Event_Team_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Game_Event_Team Game_Event::TEAM_UNKNOWN;
const Game_Event_Team Game_Event::TEAM_YELLOW;
const Game_Event_Team Game_Event::TEAM_BLUE;
const Game_Event_Team Game_Event::Team_MIN;
const Game_Event_Team Game_Event::Team_MAX;
const int Game_Event::Team_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void Game_Event_Originator::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Game_Event_Originator::kTeamFieldNumber;
const int Game_Event_Originator::kBotIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Game_Event_Originator::Game_Event_Originator()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ssl_5fgame_5fevent_2eproto::scc_info_Game_Event_Originator.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Game_Event.Originator)
}
Game_Event_Originator::Game_Event_Originator(const Game_Event_Originator& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&team_, &from.team_,
    static_cast<size_t>(reinterpret_cast<char*>(&botid_) -
    reinterpret_cast<char*>(&team_)) + sizeof(botid_));
  // @@protoc_insertion_point(copy_constructor:Game_Event.Originator)
}

void Game_Event_Originator::SharedCtor() {
  ::memset(&team_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&botid_) -
      reinterpret_cast<char*>(&team_)) + sizeof(botid_));
}

Game_Event_Originator::~Game_Event_Originator() {
  // @@protoc_insertion_point(destructor:Game_Event.Originator)
  SharedDtor();
}

void Game_Event_Originator::SharedDtor() {
}

void Game_Event_Originator::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Game_Event_Originator::descriptor() {
  ::protobuf_ssl_5fgame_5fevent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ssl_5fgame_5fevent_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Game_Event_Originator& Game_Event_Originator::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ssl_5fgame_5fevent_2eproto::scc_info_Game_Event_Originator.base);
  return *internal_default_instance();
}


void Game_Event_Originator::Clear() {
// @@protoc_insertion_point(message_clear_start:Game_Event.Originator)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&team_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&botid_) -
        reinterpret_cast<char*>(&team_)) + sizeof(botid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Game_Event_Originator::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Game_Event.Originator)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Game_Event.Team team = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Game_Event_Team_IsValid(value)) {
            set_team(static_cast< ::Game_Event_Team >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 botId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_botid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &botid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Game_Event.Originator)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Game_Event.Originator)
  return false;
#undef DO_
}

void Game_Event_Originator::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Game_Event.Originator)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .Game_Event.Team team = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->team(), output);
  }

  // optional uint32 botId = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->botid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Game_Event.Originator)
}

::google::protobuf::uint8* Game_Event_Originator::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Game_Event.Originator)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .Game_Event.Team team = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->team(), target);
  }

  // optional uint32 botId = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->botid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Game_Event.Originator)
  return target;
}

size_t Game_Event_Originator::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Game_Event.Originator)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .Game_Event.Team team = 1;
  if (has_team()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->team());
  }
  // optional uint32 botId = 2;
  if (has_botid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->botid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Game_Event_Originator::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Game_Event.Originator)
  GOOGLE_DCHECK_NE(&from, this);
  const Game_Event_Originator* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Game_Event_Originator>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Game_Event.Originator)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Game_Event.Originator)
    MergeFrom(*source);
  }
}

void Game_Event_Originator::MergeFrom(const Game_Event_Originator& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Game_Event.Originator)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      team_ = from.team_;
    }
    if (cached_has_bits & 0x00000002u) {
      botid_ = from.botid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Game_Event_Originator::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Game_Event.Originator)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Game_Event_Originator::CopyFrom(const Game_Event_Originator& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Game_Event.Originator)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Game_Event_Originator::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void Game_Event_Originator::Swap(Game_Event_Originator* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Game_Event_Originator::InternalSwap(Game_Event_Originator* other) {
  using std::swap;
  swap(team_, other->team_);
  swap(botid_, other->botid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Game_Event_Originator::GetMetadata() const {
  protobuf_ssl_5fgame_5fevent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ssl_5fgame_5fevent_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Game_Event::InitAsDefaultInstance() {
  ::_Game_Event_default_instance_._instance.get_mutable()->originator_ = const_cast< ::Game_Event_Originator*>(
      ::Game_Event_Originator::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Game_Event::kGameEventTypeFieldNumber;
const int Game_Event::kOriginatorFieldNumber;
const int Game_Event::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Game_Event::Game_Event()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ssl_5fgame_5fevent_2eproto::scc_info_Game_Event.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Game_Event)
}
Game_Event::Game_Event(const Game_Event& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_message()) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.has_originator()) {
    originator_ = new ::Game_Event_Originator(*from.originator_);
  } else {
    originator_ = NULL;
  }
  gameeventtype_ = from.gameeventtype_;
  // @@protoc_insertion_point(copy_constructor:Game_Event)
}

void Game_Event::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&originator_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&gameeventtype_) -
      reinterpret_cast<char*>(&originator_)) + sizeof(gameeventtype_));
}

Game_Event::~Game_Event() {
  // @@protoc_insertion_point(destructor:Game_Event)
  SharedDtor();
}

void Game_Event::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete originator_;
}

void Game_Event::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Game_Event::descriptor() {
  ::protobuf_ssl_5fgame_5fevent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ssl_5fgame_5fevent_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Game_Event& Game_Event::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ssl_5fgame_5fevent_2eproto::scc_info_Game_Event.base);
  return *internal_default_instance();
}


void Game_Event::Clear() {
// @@protoc_insertion_point(message_clear_start:Game_Event)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      message_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(originator_ != NULL);
      originator_->Clear();
    }
  }
  gameeventtype_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Game_Event::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Game_Event)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Game_Event.GameEventType gameEventType = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Game_Event_GameEventType_IsValid(value)) {
            set_gameeventtype(static_cast< ::Game_Event_GameEventType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .Game_Event.Originator originator = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_originator()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string message = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Game_Event.message");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Game_Event)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Game_Event)
  return false;
#undef DO_
}

void Game_Event::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Game_Event)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .Game_Event.GameEventType gameEventType = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->gameeventtype(), output);
  }

  // optional .Game_Event.Originator originator = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_originator(), output);
  }

  // optional string message = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Game_Event.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->message(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Game_Event)
}

::google::protobuf::uint8* Game_Event::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Game_Event)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .Game_Event.GameEventType gameEventType = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->gameeventtype(), target);
  }

  // optional .Game_Event.Originator originator = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_originator(), deterministic, target);
  }

  // optional string message = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Game_Event.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->message(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Game_Event)
  return target;
}

size_t Game_Event::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Game_Event)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .Game_Event.GameEventType gameEventType = 1;
  if (has_gameeventtype()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->gameeventtype());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string message = 3;
    if (has_message()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->message());
    }

    // optional .Game_Event.Originator originator = 2;
    if (has_originator()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *originator_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Game_Event::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Game_Event)
  GOOGLE_DCHECK_NE(&from, this);
  const Game_Event* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Game_Event>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Game_Event)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Game_Event)
    MergeFrom(*source);
  }
}

void Game_Event::MergeFrom(const Game_Event& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Game_Event)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_message();
      message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_originator()->::Game_Event_Originator::MergeFrom(from.originator());
    }
    if (cached_has_bits & 0x00000004u) {
      gameeventtype_ = from.gameeventtype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Game_Event::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Game_Event)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Game_Event::CopyFrom(const Game_Event& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Game_Event)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Game_Event::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000004) != 0x00000004) return false;
  if (has_originator()) {
    if (!this->originator_->IsInitialized()) return false;
  }
  return true;
}

void Game_Event::Swap(Game_Event* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Game_Event::InternalSwap(Game_Event* other) {
  using std::swap;
  message_.Swap(&other->message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(originator_, other->originator_);
  swap(gameeventtype_, other->gameeventtype_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Game_Event::GetMetadata() const {
  protobuf_ssl_5fgame_5fevent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ssl_5fgame_5fevent_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Game_Event_Originator* Arena::CreateMaybeMessage< ::Game_Event_Originator >(Arena* arena) {
  return Arena::CreateInternal< ::Game_Event_Originator >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Game_Event* Arena::CreateMaybeMessage< ::Game_Event >(Arena* arena) {
  return Arena::CreateInternal< ::Game_Event >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
